[{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"evolution-of-movie-lengths-over-time","dir":"Articles","previous_headings":"","what":"Evolution of movie lengths over time","title":"Gallery of ggridges examples","text":"Data IMDB, provided ggplot2movies package.","code":"library(ggplot2movies)  ggplot(movies[movies$year>1912,], aes(x = length, y = year, group = year)) +   geom_density_ridges(scale = 10, linewidth = 0.25, rel_min_height = 0.03) +   theme_ridges() +   scale_x_continuous(limits = c(1, 200), expand = c(0, 0)) +   scale_y_reverse(     breaks = c(2000, 1980, 1960, 1940, 1920, 1900),     expand = c(0, 0)   ) +   coord_cartesian(clip = \"off\")"},{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"results-from-catalan-regional-elections-1980-2015","dir":"Articles","previous_headings":"","what":"Results from Catalan regional elections, 1980-2015","title":"Gallery of ggridges examples","text":"Modified figure originally created Marc Belzunces (@marcbeldata Twitter).","code":"library(dplyr) library(forcats)  Catalan_elections %>%   mutate(YearFct = fct_rev(as.factor(Year))) %>%   ggplot(aes(y = YearFct)) +   geom_density_ridges(     aes(x = Percent, fill = paste(YearFct, Option)),      alpha = .8, color = \"white\", from = 0, to = 100   ) +   labs(     x = \"Vote (%)\",     y = \"Election Year\",     title = \"Indy vs Unionist vote in Catalan elections\",     subtitle = \"Analysis unit: municipalities (n = 949)\",     caption = \"Marc Belzunces (@marcbeldata) | Source: Idescat\"   ) +   scale_y_discrete(expand = c(0, 0)) +   scale_x_continuous(expand = c(0, 0)) +   scale_fill_cyclical(     breaks = c(\"1980 Indy\", \"1980 Unionist\"),     labels = c(`1980 Indy` = \"Indy\", `1980 Unionist` = \"Unionist\"),     values = c(\"#ff0000\", \"#0000ff\", \"#ff8080\", \"#8080ff\"),     name = \"Option\", guide = \"legend\"   ) +   coord_cartesian(clip = \"off\") +   theme_ridges(grid = FALSE)"},{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"temperatures-in-lincoln-nebraska","dir":"Articles","previous_headings":"","what":"Temperatures in Lincoln, Nebraska","title":"Gallery of ggridges examples","text":"Modified blog post Austin Wehrwein.","code":"ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = Month, fill = stat(x))) +   geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_discrete(expand = expansion(mult = c(0.01, 0.25))) +   scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +   labs(     title = 'Temperatures in Lincoln NE',     subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'   ) +   theme_ridges(font_size = 13, grid = TRUE) +    theme(axis.title.y = element_blank())"},{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"visualization-of-poisson-random-samples-with-different-means","dir":"Articles","previous_headings":"","what":"Visualization of Poisson random samples with different means","title":"Gallery of ggridges examples","text":"Inspired ggridges example Noam Ross (twitter.com/noamross/status/888405434381545472).","code":"# generate data set.seed(1234) pois_data <- data.frame(mean = rep(1:5, each = 10)) pois_data$group <- factor(pois_data$mean, levels = 5:1) pois_data$value <- rpois(nrow(pois_data), pois_data$mean)  # make plot ggplot(pois_data, aes(x = value, y = group, group = group)) +   geom_density_ridges2(aes(fill = group), stat = \"binline\", binwidth = 1, scale = 0.95) +   geom_text(     stat = \"bin\",     aes(       y = group + 0.95*stat(count/max(count)),       label = ifelse(stat(count) > 0, stat(count), \"\")     ),     vjust = 1.4, size = 3, color = \"white\", binwidth = 1   ) +   scale_x_continuous(     breaks = c(0:12), limits = c(-.5, 13),     expand = c(0, 0), name = \"random value\"   ) +   scale_y_discrete(     expand = expansion(add = c(0, 1.)), name = \"Poisson mean\",     labels = c(\"5.0\", \"4.0\", \"3.0\", \"2.0\", \"1.0\")   ) +   scale_fill_cyclical(values = c(\"#0000B0\", \"#7070D0\")) +   labs(     title = \"Poisson random samples with different means\",     subtitle = \"sample size n=10\"   ) +   guides(y = \"none\") +   theme_ridges(grid = FALSE) +   theme(     axis.title.x = element_text(hjust = 0.5),     axis.title.y = element_text(hjust = 0.5)   )"},{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"height-of-australian-athletes","dir":"Articles","previous_headings":"","what":"Height of Australian athletes","title":"Gallery of ggridges examples","text":"","code":"ggplot(Aus_athletes, aes(x = height, y = sport, color = sex, point_color = sex, fill = sex)) +   geom_density_ridges(     jittered_points = TRUE, scale = .95, rel_min_height = .01,     point_shape = \"|\", point_size = 3, linewidth = 0.25,     position = position_points_jitter(height = 0)   ) +   scale_y_discrete(expand = c(0, 0)) +   scale_x_continuous(expand = c(0, 0), name = \"height [cm]\") +   scale_fill_manual(values = c(\"#D55E0050\", \"#0072B250\"), labels = c(\"female\", \"male\")) +   scale_color_manual(values = c(\"#D55E00\", \"#0072B2\"), guide = \"none\") +   scale_discrete_manual(\"point_color\", values = c(\"#D55E00\", \"#0072B2\"), guide = \"none\") +   coord_cartesian(clip = \"off\") +   guides(fill = guide_legend(     override.aes = list(       fill = c(\"#D55E00A0\", \"#0072B2A0\"),       color = NA, point_color = NA)     )   ) +   ggtitle(\"Height in Australian athletes\") +   theme_ridges(center = TRUE)"},{"path":"https://wilkelab.org/ggridges/articles/gallery.html","id":"a-cheese-plot","dir":"Articles","previous_headings":"","what":"A cheese plot","title":"Gallery of ggridges examples","text":"Inspired tweet Leonard Kiefer (twitter.com/lenkiefer/status/932237461337575429).","code":"set.seed(423) n1 <- 200 n2 <- 25 n3 <- 50 cols <- c('#F2DB2F', '#F7F19E', '#FBF186') cols_dark <- c(\"#D7C32F\", \"#DBD68C\", \"#DFD672\") cheese <- data.frame(   cheese = c(rep(\"buttercheese\", n1), rep(\"Leerdammer\", n2), rep(\"Swiss\", n3)),   x = c(runif(n1), runif(n2), runif(n3)),   size = c(     rnorm(n1, mean = .1, sd = .01),     rnorm(n2, mean = 9, sd = 3),     rnorm(n3, mean = 3, sd = 1)   ) ) ggplot(cheese, aes(x = x, point_size = size, y = cheese, fill = cheese, color = cheese)) +   geom_density_ridges(     jittered_points = TRUE, point_color=\"white\", scale = .8, rel_min_height = .2,     linewidth = 1.5   ) +   scale_y_discrete(expand = c(0, 0)) +   scale_x_continuous(limits = c(0, 1), expand = c(0, 0), name = \"\", breaks = NULL) +   scale_point_size_continuous(range = c(0.01, 10), guide = \"none\") +   scale_fill_manual(values = cols, guide = \"none\") +   scale_color_manual(values = cols_dark, guide = \"none\") +   coord_cartesian(clip = \"off\") +   theme_ridges(grid = FALSE, center = TRUE)"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"geoms","dir":"Articles","previous_headings":"","what":"Geoms","title":"Introduction to ggridges","text":"ggridges package provides two main geoms, geom_ridgeline geom_density_ridges. former takes height values directly draw ridgelines, latter first estimates data densities draws using ridgelines.","code":""},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"ridgelines","dir":"Articles","previous_headings":"Geoms","what":"Ridgelines","title":"Introduction to ggridges","text":"geom geom_ridgeline can used draw lines filled area underneath.  Negative heights allowed, cut unless min_height parameter set negative well.  Multiple ridgelines can drawn time. ordered ones drawn higher background. drawing multiple ridgelines , group aesthetic must specified geom knows parts data belong ridgeline.  also possible draw ridgelines geom_density_ridges set stat = \"identity\". case, heights automatically scaled highest ridgeline just touches one scale = 1.","code":"library(ggplot2) library(ggridges)  data <- data.frame(x = 1:5, y = rep(1, 5), height = c(0, 1, 3, 4, 2)) ggplot(data, aes(x, y, height = height)) + geom_ridgeline() library(patchwork) # for side-by-side plotting  data <- data.frame(x = 1:5, y = rep(1, 5), height = c(0, 1, -1, 3, 2)) plot_base <- ggplot(data, aes(x, y, height = height))  plot_base + geom_ridgeline() | plot_base + geom_ridgeline(min_height = -2) d <- data.frame(   x = rep(1:5, 3),   y = c(rep(0, 5), rep(1, 5), rep(2, 5)),   height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1) )  ggplot(d, aes(x, y, height = height, group = y)) +    geom_ridgeline(fill = \"lightblue\") ggplot(d, aes(x, y, height = height, group = y)) +    geom_density_ridges(stat = \"identity\", scale = 1)"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"density-ridgeline-plots","dir":"Articles","previous_headings":"Geoms","what":"Density ridgeline plots","title":"Introduction to ggridges","text":"geom geom_density_ridges calculates density estimates provided data plots , using ridgeline visualization. height aesthetic need specified case.  also geom_density_ridges2, identical geom_density_ridges except uses closed polygons instead ridgelines drawing.  grouping aesthetic need provided categorical variable mapped onto y axis, need provided variable numerical.  Trailing tails can cut using rel_min_height aesthetic. aesthetic sets percent cutoff relative highest point density curves. value 0.01 usually works well, may modify parameter different datasets.  extent different densities overlap can controlled scale parameter. setting scale=1 means tallest density curve just touches baseline next higher one. Smaller values create separation curves, larger values create overlap.    scaling calculated separately per panel, facet-wrap species density curve exactly touches next higher baseline. (can disabled setting panel_scaling = FALSE.)","code":"ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges() ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges2() # modified dataset that represents species as a number iris_num <- transform(iris, Species_num = as.numeric(Species))  # does not work, causes error # ggplot(iris_num, aes(x = Sepal.Length, y = Species)) + geom_density_ridges()  # works  ggplot(iris_num, aes(x = Sepal.Length, y = Species_num, group = Species_num)) +    geom_density_ridges() ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges(rel_min_height = 0.01) # scale = 0.9, not quite touching ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges(scale = 0.9) # scale = 1, exactly touching ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges(scale = 1) # scale = 5, substantial overlap ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges(scale = 5) ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges(scale = 1) + facet_wrap(~Species)"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"varying-fill-colors-along-the-x-axis","dir":"Articles","previous_headings":"Geoms","what":"Varying fill colors along the x axis","title":"Introduction to ggridges","text":"Sometimes like area ridgeline filled single solid color rather colors vary form along x axis. effect can achieved geoms geom_ridgeline_gradient geom_density_ridges_gradient. geoms work just like geom_ridgeline geom_density_ridges, except allow varying fill colors. However, allow alpha transparency fill. technical reasons, can changing fill colors transparency . simple example changing fill colors geom_ridgeline_gradient:  example using geom_density_ridges_gradient. Note need map calculated x value (stat(x)) onto fill aesthetic, original temperature variable. case geom_density_ridges_gradient calls stat_density_ridges (described next section) calculates new x values part density calculation.","code":"d <- data.frame(   x = rep(1:5, 3) + c(rep(0, 5), rep(0.3, 5), rep(0.6, 5)),   y = c(rep(0, 5), rep(1, 5), rep(3, 5)),   height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1))  ggplot(d, aes(x, y, height = height, group = y, fill = factor(x+y))) +   geom_ridgeline_gradient() +   scale_fill_viridis_d(direction = -1, guide = \"none\") ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = Month, fill = stat(x))) +   geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +   scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +   labs(title = 'Temperatures in Lincoln NE in 2016') ## Warning: `stat(x)` was deprecated in ggplot2 3.4.0. ## ℹ Please use `after_stat(x)` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated."},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"stats","dir":"Articles","previous_headings":"","what":"Stats","title":"Introduction to ggridges","text":"ggridges package provides stat stat_density_ridges replaces stat_density context ridgeline plots. addition setting proper height geom_density_ridges, stat number additional features may useful.","code":""},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"quantile-lines-and-coloring-by-quantiles-or-probabilities","dir":"Articles","previous_headings":"Stats","what":"Quantile lines and coloring by quantiles or probabilities","title":"Introduction to ggridges","text":"setting option quantile_lines = TRUE, can make stat_density_ridges calculate position lines indicating quantiles. default, three lines drawn, corresponding first, second, third quartile:  can change number quantiles specifying via quantiles option. Note quantiles = 2 implies one line (median) boundary two quantiles.  can also specify quantiles cut points rather number. E.g., can indicate 2.5% 97.5% tails.  Using geom geom_density_ridges_gradient can also color quantile, via calculated stat(quantile) aesthetic. Note aesthetic calculated calc_ecdf = TRUE.  can use approach highlight tails distributions.  Finally, calc_ecdf = TRUE, also access calculated aesthetic stat(ecdf), represents empirical cumulative density function distribution. allows us map probabilities directly onto color.","code":"ggplot(iris, aes(x = Sepal.Length, y = Species)) +   stat_density_ridges(quantile_lines = TRUE) ggplot(iris, aes(x = Sepal.Length, y = Species)) +   stat_density_ridges(quantile_lines = TRUE, quantiles = 2) ggplot(iris, aes(x = Sepal.Length, y = Species)) +   stat_density_ridges(quantile_lines = TRUE, quantiles = c(0.025, 0.975), alpha = 0.7) ggplot(iris, aes(x=Sepal.Length, y=Species, fill = factor(stat(quantile)))) +   stat_density_ridges(     geom = \"density_ridges_gradient\", calc_ecdf = TRUE,     quantiles = 4, quantile_lines = TRUE   ) +   scale_fill_viridis_d(name = \"Quartiles\") ggplot(iris, aes(x = Sepal.Length, y = Species, fill = factor(stat(quantile)))) +   stat_density_ridges(     geom = \"density_ridges_gradient\",     calc_ecdf = TRUE,     quantiles = c(0.025, 0.975)   ) +   scale_fill_manual(     name = \"Probability\", values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),     labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")   ) ggplot(iris, aes(x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5 - stat(ecdf)))) +   stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +   scale_fill_viridis_c(name = \"Tail probability\", direction = -1)"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"jittering-points","dir":"Articles","previous_headings":"Stats","what":"Jittering points","title":"Introduction to ggridges","text":"stat stat_density_ridges also provides option visualize original data points distributions generated. can done setting jittered_points = TRUE, either stat_density_ridges geom_density_ridges:  points shown can controlled position options, e.g. “raincloud” raincloud effect:  can also simulate rug:  Note using position_points_jitter() , position_jitter(). position_points_jitter() knows jitter points ridgeline plot, without touching density lines. Styling jittered points bit tricky possible special scales provided ggridges. First, scale_discrete_manual() can used make arbitrary discrete scales arbitrary aesthetics. use next example style point shapes. Second, various point aesthetic scales, scale_point_color_hue(). See reference documentation scales details.  common aesthetics points can applied jittered points. However, aesthetic names start point_. next example, mapped additional variable onto size points.  Similarly, aesthetics vertical lines, named vline_. vertical lines can also shifted aligned jittered points. allows us generate figures following:","code":"ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(jittered_points = TRUE) ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(     jittered_points = TRUE, position = \"raincloud\",     alpha = 0.7, scale = 0.9   ) ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(     jittered_points = TRUE,     position = position_points_jitter(width = 0.05, height = 0),     point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7,   ) ggplot(iris, aes(x = Sepal.Length, y = Species, fill = Species)) +   geom_density_ridges(     aes(point_color = Species, point_fill = Species, point_shape = Species),     alpha = .2, point_alpha = 1, jittered_points = TRUE   ) +   scale_point_color_hue(l = 40) +   scale_discrete_manual(aesthetics = \"point_shape\", values = c(21, 22, 23)) ggplot(iris, aes(x = Sepal.Length, y = Species, fill = Species)) +   geom_density_ridges(     aes(point_shape = Species, point_fill = Species, point_size = Petal.Length),      alpha = .2, point_alpha = 1, jittered_points = TRUE   ) +   scale_point_color_hue(l = 40) + scale_point_size_continuous(range = c(0.5, 4)) +   scale_discrete_manual(aesthetics = \"point_shape\", values = c(21, 22, 23)) ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(     jittered_points = TRUE, quantile_lines = TRUE, scale = 0.9, alpha = 0.7,     vline_width = 1, vline_color = \"red\",     point_size = 0.4, point_alpha = 1,     position = position_raincloud(adjust_vlines = TRUE)   )"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"using-alternative-stats","dir":"Articles","previous_headings":"Stats","what":"Using alternative stats","title":"Introduction to ggridges","text":"stat stat_density_ridges may always exactly want . case, can use stats may better respective application. First, stat_density_ridges estimates data range bandwidth density estimation entire data , rather individual group data. choice makes ridgeline plots look uniform, density estimates can cases look quite different get geom_density stat_density. problem can remedied using stat_density geom_density_ridges. works just fine, just need make sure map calculated density onto height aesthetic.  Second, may scenarios don’t want geom_density_ridges density estimation, example done already . case, can use stat_identity. benefit using geom_density_ridges stat_identiy using geom_ridgeline directly geom_density_ridges provides automatic scaling. example, assume calculated density curves Sepal.Length column iris dataset: can plot follows:  Notice plot looks different one generated using stat = \"density\", even though density computation exactly : () density curves extend way zero. (ii) horizontal line extending way limits x axis. Finally, prefer histograms density plots, can also use stat_binline. Note overlapping histograms can look strange, option probably best used scale parameter < 1. option draw_baseline = FALSE removes trailing lines either side histogram. (histograms, rel_min_height parameter doesn’t work well.)","code":"ggplot(iris, aes(x = Sepal.Length, y = Species, height = stat(density))) +    geom_density_ridges(stat = \"density\") library(dplyr)  iris_densities <- iris %>%   group_by(Species) %>%   group_modify(~ ggplot2:::compute_density(.x$Sepal.Length, NULL)) %>%   rename(Sepal.Length = x)  iris_densities ## # A tibble: 1,536 × 7 ## # Groups:   Species [3] ##    Species Sepal.Length  density   scaled ndensity  count     n ##    <fct>          <dbl>    <dbl>    <dbl>    <dbl>  <dbl> <int> ##  1 setosa          3.93 0.000861 0.000695 0.000695 0.0430    50 ##  2 setosa          3.94 0.000964 0.000778 0.000778 0.0482    50 ##  3 setosa          3.94 0.00108  0.000868 0.000868 0.0538    50 ##  4 setosa          3.94 0.00120  0.000966 0.000966 0.0599    50 ##  5 setosa          3.95 0.00133  0.00108  0.00108  0.0667    50 ##  6 setosa          3.95 0.00149  0.00120  0.00120  0.0743    50 ##  7 setosa          3.96 0.00165  0.00133  0.00133  0.0824    50 ##  8 setosa          3.96 0.00183  0.00148  0.00148  0.0914    50 ##  9 setosa          3.97 0.00203  0.00164  0.00164  0.101     50 ## 10 setosa          3.97 0.00225  0.00181  0.00181  0.112     50 ## # ℹ 1,526 more rows ggplot(iris_densities, aes(x = Sepal.Length, y = Species, height = density)) +    geom_density_ridges(stat = \"identity\") ggplot(iris, aes(x = Sepal.Length, y = Species, height = stat(density))) +    geom_density_ridges(stat = \"binline\", bins = 20, scale = 0.95, draw_baseline = FALSE)"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"themes","dir":"Articles","previous_headings":"","what":"Themes","title":"Introduction to ggridges","text":"ridgeline plots tend require theme modifications look good. importantly, y-axis tick labels vertically aligned flush axis ticks rather vertically centered. ggridges package provides theme theme_ridges theme modifications.  However, without modifications, still issues plot. First, ridgeline virginica species slightly cut top point. Second, space x y axis labels ridgelines large. can fix issues using expand option axis scales.  Instead expanding axis, can also turn clipping plot panel.  default, theme_ridges adds grid, grid can switched needed. Also, axis titles can centered.  prefer use different theme theme_ridges, example theme_minimal, still advisable adjust alignment axis tick labels axis scales.","code":"ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges() +    theme_ridges() ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges() +    scale_x_continuous(expand = c(0, 0)) +   scale_y_discrete(expand = expand_scale(mult = c(0.01, .7))) +   theme_ridges() ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges() +   scale_x_continuous(expand = c(0, 0)) +   scale_y_discrete(expand = c(0, 0)) +   coord_cartesian(clip = \"off\") +   theme_ridges() ggplot(iris, aes(x = Sepal.Length, y = Species)) +    geom_density_ridges() +   scale_x_continuous(expand = c(0, 0)) +   scale_y_discrete(expand = c(0, 0)) +   coord_cartesian(clip = \"off\") +    theme_ridges(grid = FALSE, center_axis_labels = TRUE) ggplot(iris, aes(x = Sepal.Length, y = Species)) +     geom_density_ridges() +     scale_x_continuous(expand = c(0, 0)) +    scale_y_discrete(expand = c(0, 0)) +    coord_cartesian(clip = \"off\") +    theme_minimal(base_size = 14) +     theme(axis.text.y = element_text(vjust = 0))"},{"path":"https://wilkelab.org/ggridges/articles/introduction.html","id":"cyclical-scales","dir":"Articles","previous_headings":"","what":"Cyclical scales","title":"Introduction to ggridges","text":"Many ridgeline plots improve appearance filled areas drawn alternating colors. simplify generation plots, ggridges provides cyclical scales. scales cycle aesthetic values provided. example, use scale_fill_cyclical(values = c(\"blue\", \"green\")) ggplot cycle two fill colors throughout plot.  default, cyclical scales draw legend, legend usually confusing unless labels manually altered. Legends can switched via guide = \"legend\" option, just like scales.  Legends can modified usual.  Cyclical scales defined common aesthetics one might want change, color, size, alpha, linetype, legends combined possible.  cyclical scales generic ggplot2 scales, work geom accepts respective aesthetic. Thus, example, can make histograms alternatingly colored bars.  previous example won’t win design awards, subtle effects can helpful.","code":"ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +     geom_density_ridges(scale = 4) +     scale_fill_cyclical(values = c(\"blue\", \"green\")) ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +     geom_density_ridges(scale = 4) +     scale_fill_cyclical(values = c(\"blue\", \"green\"), guide = \"legend\") ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +     geom_density_ridges(scale = 4) +     scale_fill_cyclical(      name = \"Fill colors\",      values = c(\"blue\", \"green\"),      labels = c(\"Fair\" = \"blue\", \"Good\" = \"green\"),      guide = \"legend\"    ) ggplot(diamonds, aes(x = price, y = cut, fill = cut, color = cut)) +     geom_density_ridges(scale = 4, linewidth = 1) +     scale_fill_cyclical(      name = \"Color scheme\",      values = c(\"blue\", \"green\"), guide = \"legend\",      labels = c(\"Fair\" = \"blue w/ black outline\", \"Good\" = \"green w/ yellow outline\")     ) +    scale_color_cyclical(      name = \"Color scheme\",      values = c(\"black\", \"yellow\"), guide = \"legend\",      labels = c(\"Fair\" = \"blue w/ black outline\", \"Good\" = \"green w/ yellow outline\")    ) ggplot(mpg, aes(x = class, fill = class, color = class)) +    geom_bar(linewidth = 1.5) +   scale_fill_cyclical(     name = \"Color scheme\",     values = c(\"blue\", \"green\"), guide = \"legend\",     labels = c(\"blue w/ black outline\", \"green w/ yellow outline\")   ) +   scale_color_cyclical(     name = \"Color scheme\",     values = c(\"black\", \"yellow\"), guide = \"legend\",     labels = c(\"blue w/ black outline\", \"green w/ yellow outline\")   ) mpg %>% group_by(class) %>%    tally() %>%    arrange(desc(n)) %>%   mutate(class = factor(class, levels = class)) %>%   ggplot(aes(x = class, y = n, fill = class)) +    geom_col() +   scale_fill_cyclical(values = c(\"#4040B0\", \"#9090F0\")) +   scale_y_continuous(expand = c(0, 0)) +    theme_minimal()"},{"path":"https://wilkelab.org/ggridges/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Claus O. Wilke. Author, maintainer.","code":""},{"path":"https://wilkelab.org/ggridges/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wilke C (2025). ggridges: Ridgeline Plots 'ggplot2'. R package version 0.5.7, https://wilkelab.org/ggridges/.","code":"@Manual{,   title = {ggridges: Ridgeline Plots in 'ggplot2'},   author = {Claus O. Wilke},   year = {2025},   note = {R package version 0.5.7},   url = {https://wilkelab.org/ggridges/}, }"},{"path":"https://wilkelab.org/ggridges/index.html","id":"ggridges-ridgeline-plots-in-ggplot2","dir":"","previous_headings":"","what":"Ridgeline Plots in ggplot2","title":"Ridgeline Plots in ggplot2","text":"Ridgeline plots partially overlapping line plots create impression mountain range. can quite useful visualizing changes distributions time space.","code":""},{"path":"https://wilkelab.org/ggridges/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ridgeline Plots in ggplot2","text":"Please install stable release CRAN: Alternatively, can install latest development version github:","code":"install.packages(\"ggridges\") remotes::install_github(\"wilkelab/ggridges\")"},{"path":"https://wilkelab.org/ggridges/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Ridgeline Plots in ggplot2","text":"","code":"library(ggplot2) library(ggridges)      ggplot(diamonds, aes(x = price, y = cut)) +   geom_density_ridges(scale = 4) +    scale_y_discrete(expand = c(0, 0)) +     # will generally have to set the `expand` option   scale_x_continuous(expand = c(0, 0)) +   # for both axes to remove unneeded padding   coord_cartesian(clip = \"off\") + # to avoid clipping of the very top of the top ridgeline   theme_ridges() #> Picking joint bandwidth of 458"},{"path":"https://wilkelab.org/ggridges/index.html","id":"documentation-and-examples","dir":"","previous_headings":"","what":"Documentation and Examples","title":"Ridgeline Plots in ggplot2","text":"First read package vignette. read reference manual.","code":""},{"path":"https://wilkelab.org/ggridges/reference/Aus_athletes.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian athletes — Aus_athletes","title":"Australian athletes — Aus_athletes","text":"dataset equivalent ais DAAG package.","code":""},{"path":"https://wilkelab.org/ggridges/reference/Aus_athletes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Australian athletes — Aus_athletes","text":"","code":"Aus_athletes"},{"path":"https://wilkelab.org/ggridges/reference/Aus_athletes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian athletes — Aus_athletes","text":"object class data.frame 202 rows 13 columns.","code":""},{"path":"https://wilkelab.org/ggridges/reference/Aus_athletes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Australian athletes — Aus_athletes","text":"Telford, R.D. Cunningham, R.B. 1991. Sex, sport body-size dependency hematology highly trained athletes. Medicine Science Sports Exercise 23: 788-794.","code":""},{"path":"https://wilkelab.org/ggridges/reference/Aus_athletes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian athletes — Aus_athletes","text":"","code":"# none yet"},{"path":"https://wilkelab.org/ggridges/reference/Catalan_elections.html","id":null,"dir":"Reference","previous_headings":"","what":"Results from Catalan regional elections (1980-2015) — Catalan_elections","title":"Results from Catalan regional elections (1980-2015) — Catalan_elections","text":"Data Catalan regional elections 949 municipalities, 11 elections spanning years 1980-2015. data obtained processed Idescat.cat Marc Belzunces (Twitter: @marcbeldata).","code":""},{"path":"https://wilkelab.org/ggridges/reference/Catalan_elections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results from Catalan regional elections (1980-2015) — Catalan_elections","text":"","code":"Catalan_elections"},{"path":"https://wilkelab.org/ggridges/reference/Catalan_elections.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results from Catalan regional elections (1980-2015) — Catalan_elections","text":"tibble 20764 rows 4 variables: Municipality  Year  Option voter option; either \"Indy\" \"Unionist\" Percent percentage voters choosing given option","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothed density estimates drawn with a ridgeline rather than area — geom_density_line","title":"Smoothed density estimates drawn with a ridgeline rather than area — geom_density_line","text":"function drop-replacement ggplot2's ggplot2::geom_density(). difference geom draws ridgeline (line filled area underneath) rather polygon.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothed density estimates drawn with a ridgeline rather than area — geom_density_line","text":"","code":"geom_density_line(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://wilkelab.org/ggridges/reference/geom_density_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothed density estimates drawn with a ridgeline rather than area — geom_density_line","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/geom_density_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smoothed density estimates drawn with a ridgeline rather than area — geom_density_line","text":"","code":"library(ggplot2) ggplot(diamonds, aes(carat)) +   geom_density_line()   ggplot(diamonds, aes(carat)) +   geom_density_line(adjust = 1/5)  ggplot(diamonds, aes(carat)) +   geom_density_line(adjust = 5)   ggplot(diamonds, aes(depth, colour = cut)) +   geom_density_line(alpha = 0.5) +   xlim(55, 70) #> Warning: Removed 45 rows containing non-finite outside the scale range #> (`stat_density()`).  ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +   geom_density_line(alpha = 0.1) +   xlim(55, 70) #> Warning: Removed 45 rows containing non-finite outside the scale range #> (`stat_density()`)."},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ridgeline plot — geom_density_ridges","title":"Create ridgeline plot — geom_density_ridges","text":"geom_density_ridges arranges multiple density plots staggered fashion, cover famous Joy Division album Unknown Pleasures.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ridgeline plot — geom_density_ridges","text":"","code":"geom_density_ridges(   mapping = NULL,   data = NULL,   stat = \"density_ridges\",   position = \"points_sina\",   panel_scaling = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_density_ridges2(   mapping = NULL,   data = NULL,   stat = \"density_ridges\",   position = \"points_sina\",   panel_scaling = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ridgeline plot — geom_density_ridges","text":"mapping Set aesthetic mappings created ggplot2::aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. function called single argument, plot data. return value must data.frame., used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. panel_scaling TRUE, default, relative scaling calculated separately panel. FALSE, relative scaling calculated globally. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" linewidth = 3. may also parameters paired geom/stat.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create ridgeline plot — geom_density_ridges","text":"default, geom calculates densities point data mapped onto x axis. density calculation wanted, use stat=\"identity\" use geom_ridgeline. difference geom_density_ridges geom_ridgeline geom_density_ridges provide automatic scaling ridgelines (controlled scale aesthetic), whereas geom_ridgeline plot data . Note set stat=\"identity\", height aesthetic must provided. Note default stat_density_ridges makes joint density estimation across datasets. may generate desired result using faceted plots. alternative, can set stat = \"density\" use ggplot2::stat_density. case, required add aesthetic mapping height = after_stat(density) (see examples).","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Create ridgeline plot — geom_density_ridges","text":"Required aesthetics bold. x y weight Optional case weights passed stats::density calculate weighted density estimate group Defines grouping. needed categorical variable mapped onto y, needed otherwise. typically variable mapped y. height height ridgeline respective x value. Automatically calculated provided stat_density_ridges default stat changed. scale scaling factor scale height ridgelines relative spacing . value 1 indicates maximum point ridgeline touches baseline right , assuming even spacing baselines. rel_min_height Lines heights cutoff removed. cutoff measured relative overall maximum, rel_min_height=0.01 remove everything 1\\ ridgelines. Default 0, nothing removed. alpha colour, fill, group, alpha, linetype, linewidth, geom_ridgeline. point_shape, point_colour, point_size, point_fill, point_alpha, point_stroke, geom_ridgeline.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_density_ridges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ridgeline plot — geom_density_ridges","text":"","code":"library(ggplot2)  # set the `rel_min_height` argument to remove tails ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(rel_min_height = 0.005) +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   theme_ridges() #> Picking joint bandwidth of 0.181   # set the `scale` to determine how much overlap there is among the plots ggplot(diamonds, aes(x = price, y = cut)) +   geom_density_ridges(scale = 4) +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   theme_ridges() #> Picking joint bandwidth of 458   # the same figure with colors, and using the ggplot2 density stat ggplot(diamonds, aes(x = price, y = cut, fill = cut, height = after_stat(density))) +   geom_density_ridges(scale = 4, stat = \"density\") +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   scale_fill_brewer(palette = 4) +   theme_ridges() + theme(legend.position = \"none\")   # use geom_density_ridges2() instead of geom_density_ridges() for solid polygons ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges2() +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   theme_ridges() #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"Plots sum y height aesthetics versus x, filling area y y + height color. Thus, data mapped onto y onto height must units. want relative scaling heights, can use geom_density_ridges stat = \"identity\".","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"","code":"geom_ridgeline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"mapping Set aesthetic mappings created ggplot2::aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. function called single argument, plot data. return value must data.frame., used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" linewidth = 3. may also parameters paired geom/stat.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"addition drawing ridgelines, geom can also draw points provided part dataset. stat stat_density_ridges() takes advantage option generate ridgeline plots overlaid jittered points.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"Required aesthetics bold. x y height Height ridgeline, measured respective y value. Assumed positive, though required. group Defines grouping. Required dataset contains multiple distinct ridgelines. typically variable mapped y. scale scaling factor scale height ridgelines. value 1 indicates heights taken . aesthetic can used convert height units y units. min_height height cutoff drawn ridgelines. values fall cutoff removed. main purpose cutoff remove long tails right baseline level, uses possible. cutoff applied height scaling applied via scale aesthetic. Default 0, negative values removed. colour Color ridgeline fill Fill color area ridgeline alpha Transparency level fill. applied color. want transparent lines, can set color RGBA value, e.g. #FF0000A0 partially transparent red. group Grouping, draw multiple ridgelines one dataset linetype Linetype ridgeline linewidth Line thickness point_shape, point_colour, point_size, point_fill, point_alpha, point_stroke Aesthetics applied points drawn addition ridgelines.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a ridgeline (line with filled area underneath) — geom_ridgeline","text":"","code":"library(ggplot2)  d <- data.frame(x = rep(1:5, 3), y = c(rep(0, 5), rep(1, 5), rep(3, 5)),                 height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1)) ggplot(d, aes(x, y, height = height, group = y)) + geom_ridgeline(fill=\"lightblue\")"},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ridgelines and ridgeline plots with fill gradients along the x axis — geom_ridgeline_gradient","title":"Plot ridgelines and ridgeline plots with fill gradients along the x axis — geom_ridgeline_gradient","text":"geoms geom_ridgeline_gradient geom_density_ridges_gradient work just like geom_ridgeline geom_density_ridges except fill aesthetic can vary along x axis. filling color gradients fraught issues, geoms considered experimental. use unless really need . Note due limitations R's graphics system, transparency (alpha) disabled gradient fills.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ridgelines and ridgeline plots with fill gradients along the x axis — geom_ridgeline_gradient","text":"","code":"geom_ridgeline_gradient(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   gradient_lwd = 0.5,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_density_ridges_gradient(   mapping = NULL,   data = NULL,   stat = \"density_ridges\",   position = \"points_sina\",   panel_scaling = TRUE,   na.rm = TRUE,   gradient_lwd = 0.5,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ridgelines and ridgeline plots with fill gradients along the x axis — geom_ridgeline_gradient","text":"mapping Set aesthetic mappings created ggplot2::aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. function called single argument, plot data. return value must data.frame., used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. gradient_lwd parameter needed remove rendering artifacts inside rendered gradients. ideally 0, often needs around 0.5 higher. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" linewidth = 3. may also parameters paired geom/stat. panel_scaling Argument geom_density_ridges_gradient. TRUE, default, relative scaling calculated separately panel. FALSE, relative scaling calculated globally.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_ridgeline_gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ridgelines and ridgeline plots with fill gradients along the x axis — geom_ridgeline_gradient","text":"","code":"library(ggplot2)  # Example for `geom_ridgeline_gradient()` d <- data.frame(   x = rep(1:5, 3) + c(rep(0, 5), rep(0.3, 5), rep(0.6, 5)),   y = c(rep(0, 5), rep(1, 5), rep(3, 5)),   height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1) ) ggplot(d, aes(x, y, height = height, group = y, fill = factor(x+y))) +   geom_ridgeline_gradient() +   scale_fill_viridis_d(direction = -1) +   theme(legend.position = 'none')   # Example for `geom_density_ridges_gradient()` ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = stat(x))) +   geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_discrete(expand = c(0, 0)) +   scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +   coord_cartesian(clip = \"off\") +   labs(title = 'Temperatures in Lincoln NE in 2016') +   theme_ridges(font_size = 13, grid = TRUE) +   theme(axis.title.y = element_blank()) #> Warning: `stat(x)` was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(x)` instead. #> Picking joint bandwidth of 3.37"},{"path":"https://wilkelab.org/ggridges/reference/geom_vridgeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","title":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","text":"Plots sum x width aesthetics versus y, filling area x x + width color. Just like geom_ridgeline(), y x replaced.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_vridgeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","text":"","code":"geom_vridgeline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://wilkelab.org/ggridges/reference/geom_vridgeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","text":"mapping Set aesthetic mappings created ggplot2::aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. function called single argument, plot data. return value must data.frame., used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" linewidth = 3. may also parameters paired geom/stat.","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_vridgeline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","text":"Required aesthetics bold. x y width Width ridgeline, measured respective x value. Assumed positive, though required. group Defines grouping. Required dataset contains multiple distinct ridgelines. typically variable mapped x. scale scaling factor scale widths ridgelines. value 1 indicates widths taken . aesthetic can used convert width units x units. min_width width cutoff drawn ridgelines. values fall cutoff removed. main purpose cutoff remove long tails right baseline level, uses possible. cutoff applied width scaling applied via scale aesthetic. Default 0, negative values removed. color Color ridgeline fill Fill color area ridgeline alpha Transparency level fill. applied color. want transparent lines, can set color RGBA value, e.g. #FF0000A0 partially transparent red. group Grouping, draw multiple ridgelines one dataset linetype Linetype ridgeline linewidth Line thickness","code":""},{"path":"https://wilkelab.org/ggridges/reference/geom_vridgeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a vertical ridgeline (ridgeline rotated 90 degrees) — geom_vridgeline","text":"","code":"library(ggplot2)  d <- data.frame(y = rep(1:5, 3), x = c(rep(0, 5), rep(1, 5), rep(3, 5)),                 width = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1)) ggplot(d, aes(x, y, width = width, group = x)) + geom_vridgeline(fill=\"lightblue\")   ggplot(iris, aes(x=Species, y=Sepal.Width, width = after_stat(density), fill=Species)) +   geom_vridgeline(stat=\"ydensity\", trim=FALSE, alpha = 0.85, scale = 2)"},{"path":"https://wilkelab.org/ggridges/reference/ggridges-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Ridgeline plots with ggplot2 — ggridges-package","title":"Ridgeline plots with ggplot2 — ggridges-package","text":"Please see package vignettes usage instructions. quick start, check examples geom_density_ridges().","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/ggridges-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ridgeline plots with ggplot2 — ggridges-package","text":"Maintainer: Claus O. Wilke wilke@austin.utexas.edu (ORCID)","code":""},{"path":"https://wilkelab.org/ggridges/reference/lincoln_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Weather in Lincoln, Nebraska in 2016. — lincoln_weather","title":"Weather in Lincoln, Nebraska in 2016. — lincoln_weather","text":"dataset containing weather information Lincoln, Nebraska, 2016. Originally downloaded Weather Underground Austin Wehrwein, http://austinwehrwein.com/. variables listed . self-explanatory. Max, mean, min measurements calculated relative specific day measurement.","code":""},{"path":"https://wilkelab.org/ggridges/reference/lincoln_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weather in Lincoln, Nebraska in 2016. — lincoln_weather","text":"","code":"lincoln_weather"},{"path":"https://wilkelab.org/ggridges/reference/lincoln_weather.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Weather in Lincoln, Nebraska in 2016. — lincoln_weather","text":"tibble 366 rows 24 variables: CST Day measurement Max Temperature [F]  Mean Temperature [F]  Min Temperature [F]  Max Dew Point [F]  Mean Dew Point [F]  Min Dewpoint [F]  Max Humidity  Mean Humidity  Min Humidity  Max Sea Level Pressure []  Mean Sea Level Pressure []  Min Sea Level Pressure []  Max Visibility [Miles]  Mean Visibility [Miles]  Min Visibility [Miles]  Max Wind Speed [MPH]  Mean Wind Speed[MPH]  Max Gust Speed [MPH]  Precipitation []  CloudCover  Events Specific weather events, rain, snow, fog WindDir [Degrees]  Month month measurement taken","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_points_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly jitter the points in a ridgeline plot — position_points_jitter","title":"Randomly jitter the points in a ridgeline plot — position_points_jitter","text":"position adjustment specifically geom_density_ridges() related geoms. jitters points drawn geoms, . points present, plot remains unchanged. effect similar ggplot2::position_jitter(): points randomly shifted /left right.","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_points_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly jitter the points in a ridgeline plot — position_points_jitter","text":"","code":"position_points_jitter(   width = 0,   height = 0.2,   yoffset = 0,   adjust_vlines = FALSE,   seed = NULL )"},{"path":"https://wilkelab.org/ggridges/reference/position_points_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly jitter the points in a ridgeline plot — position_points_jitter","text":"width Width horizontal jittering. default set 0. height Height vertical jittering, applied directions (). default 0.2. yoffset Vertical offset applied addition jittering. adjust_vlines TRUE, adjusts vertical lines (drawn quantile lines, example) align point cloud. seed Random seed. set NULL, current random number generator used. set NA, new random random seed generated. set number, number used seed jittering .","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/position_points_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomly jitter the points in a ridgeline plot — position_points_jitter","text":"","code":"library(ggplot2)  # default jittered points ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(jittered_points = TRUE, position = \"points_jitter\", alpha = 0.7) #> Picking joint bandwidth of 0.181   # simulating a rug ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(jittered_points = TRUE, point_shape = '|', alpha = 0.7, point_size = 2,                       position = position_points_jitter(width = 0.02, height = 0)) #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/position_points_sina.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly distribute points in a ridgeline plot between baseline and ridgeline — position_points_sina","title":"Randomly distribute points in a ridgeline plot between baseline and ridgeline — position_points_sina","text":"position adjustment specifically geom_density_ridges() related geoms. jitters points drawn geoms, . points present, plot remains unchanged. effect similar sina plot: Points randomly distributed fill entire shaded area representing data density.","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_points_sina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly distribute points in a ridgeline plot between baseline and ridgeline — position_points_sina","text":"","code":"position_points_sina(rel_min = 0.02, rel_max = 0.98, seed = NULL)"},{"path":"https://wilkelab.org/ggridges/reference/position_points_sina.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly distribute points in a ridgeline plot between baseline and ridgeline — position_points_sina","text":"rel_min relative minimum value point can placed. rel_max relative maximum value point can placed. seed See position_points_jitter.","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/position_points_sina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomly distribute points in a ridgeline plot between baseline and ridgeline — position_points_sina","text":"","code":"library(ggplot2)  ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(jittered_points = TRUE, position = \"points_sina\", alpha = 0.7) #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"position adjustment specifically geom_density_ridges() related geoms. jitters points drawn geoms, . points present, plot remains unchanged. effect similar position_points_jitter(), default points lie underneath baseline individual ridgeline.","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"","code":"position_raincloud(   width = 0,   height = 0.4,   ygap = 0.05,   adjust_vlines = FALSE,   seed = NULL )"},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"width Width horizontal jittering. default set 0. height Total height point cloud. default 0.4. ygap Vertical gap ridgeline baseline point cloud. adjust_vlines TRUE, adjusts vertical lines (drawn quantile lines, example) align point cloud. seed Random seed. See position_points_jitter.","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"idea position adjustment comes Micah Allen's work raincloud plots (Allen et al. 2021).","code":""},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., van Langen, J., Kievit, R. . (2021) Raincloud plots: multi-platform tool robust data visualization [version 2; peer review: 2 approved]. Wellcome Open Res 4:63.","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/position_raincloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a cloud of randomly jittered points below a ridgeline plot — position_raincloud","text":"","code":"library(ggplot2)  ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges(jittered_points = TRUE, position = \"raincloud\", alpha = 0.7) #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a list to a single value by iteratively applying a binary function — reduce","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":"Inspired reduce() purrr package","code":""},{"path":"https://wilkelab.org/ggridges/reference/reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":"","code":"reduce(.x, .f, ..., .init)"},{"path":"https://wilkelab.org/ggridges/reference/reduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":".x list atomic vector. .f 2-argument function. function passed accumulated value first argument \"next\" value second argument. ... Additional arguments passed .f. .init supplied, used first value start accumulation, rather using x[[1]]. useful want ensure reduce returns correct value .x empty. missing, x empty, throw error.","code":""},{"path":"https://wilkelab.org/ggridges/reference/reduce.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":"Jonathon Love jon@thon.cc","code":""},{"path":"https://wilkelab.org/ggridges/reference/scale_cyclical.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a discrete scale that cycles between values — scale_cyclical","title":"Create a discrete scale that cycles between values — scale_cyclical","text":"readability ridgeline plots can often improved alternating fill colors aesthetics. various cyclical scales make easy create plots feature, simply map grouping variable respective aesthetic (e.g., fill) use scale_fill_cyclical define fill colors want alternate. Note cyclical scales draw legends default, legends usually wrong unless labels properly adjusted. draw legends, set guide argument \"legend\", shown examples.","code":""},{"path":"https://wilkelab.org/ggridges/reference/scale_cyclical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a discrete scale that cycles between values — scale_cyclical","text":"","code":"scale_colour_cyclical(..., values)  scale_fill_cyclical(..., values)  scale_alpha_cyclical(..., values)  scale_linetype_cyclical(..., values)  scale_size_cyclical(..., values)  scale_linewidth_cyclical(..., values)"},{"path":"https://wilkelab.org/ggridges/reference/scale_cyclical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a discrete scale that cycles between values — scale_cyclical","text":"... Common discrete scale parameters: name, breaks, labels, na.value, limits guide. See ggplot2::discrete_scale details. values aesthetic values scale cycle , e.g. colors scale color fill aesthetic.","code":""},{"path":"https://wilkelab.org/ggridges/reference/scale_cyclical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a discrete scale that cycles between values — scale_cyclical","text":"","code":"library(ggplot2)  # By default, scale_cyclical sets `guide = \"none\"`, i.e., no legend # is drawn ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +   geom_density_ridges(scale = 4) +   scale_fill_cyclical(values = c(\"#3030D0\", \"#9090F0\")) #> Picking joint bandwidth of 458   # However, legends can be turned on by setting `guide = \"legend\"` ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +   geom_density_ridges(scale = 4) +   scale_fill_cyclical(values = c(\"#3030D0\", \"#9090F0\"),                       guide = \"legend\", name = \"Fill colors\",                       labels = c(\"dark blue\", \"light blue\")) #> Picking joint bandwidth of 458   # Cyclical scales are also available for the various other aesthetics ggplot(diamonds, aes(x = price, y = cut, fill = cut,                      color = cut, linewidth = cut,                      alpha = cut, linetype = cut)) +   geom_density_ridges(scale = 4, fill = \"blue\") +   scale_fill_cyclical(values = c(\"blue\", \"green\")) +   scale_color_cyclical(values = c(\"black\", \"white\")) +   scale_alpha_cyclical(values = c(0.4, 0.8)) +   scale_linewidth_cyclical(values = c(2, 1)) +   scale_linetype_cyclical(values = c(1, 2)) #> Picking joint bandwidth of 458"},{"path":"https://wilkelab.org/ggridges/reference/scale_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for point aesthetics — scale_point","title":"Scales for point aesthetics — scale_point","text":"various scales can applied point aesthetics, point_color, point_fill, point_size. individual scales usage existing standard ggplot2 scales, name differs.","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/scale_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for point aesthetics — scale_point","text":"","code":"library(ggplot2)  # default scales ggplot(iris, aes(x=Sepal.Length, y=Species, fill = Species)) +   geom_density_ridges(     aes(       point_color = Species, point_fill = Species,       point_shape = Species     ),     alpha = .4, jittered_points = TRUE   ) +   theme_ridges() #> Picking joint bandwidth of 0.181   # modified scales ggplot(iris, aes(x=Sepal.Length, y=Species, fill = Species)) +   geom_density_ridges(     aes(       point_color = Species, point_fill = Species,       point_shape = Species     ),     alpha = .4, point_alpha = 1,     jittered_points = TRUE   ) +   scale_fill_hue(l = 50) +   scale_point_color_hue(l = 20) +   scale_point_fill_hue(l = 70) +   scale_discrete_manual(\"point_shape\", values = c(21, 22, 23)) +   theme_ridges() #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/scale_vline.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for vline aesthetics — scale_vline","title":"Scales for vline aesthetics — scale_vline","text":"various scales can applied vline aesthetics, vline_color, vline_width, vline_linetype. individual scales usage existing standard ggplot2 scales, name differs.","code":""},{"path":[]},{"path":"https://wilkelab.org/ggridges/reference/scale_vline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for vline aesthetics — scale_vline","text":"","code":"library(ggplot2)  # default scales ggplot(iris, aes(x=Sepal.Length, y=Species, fill = Species, color = Species)) +   geom_density_ridges(     aes(vline_color = Species, vline_linetype = Species),     alpha = .4, quantile_lines = TRUE   ) +   theme_ridges() #> Picking joint bandwidth of 0.181   # modified scales ggplot(iris, aes(x=Sepal.Length, y=Species, fill = Species, color = Species)) +   geom_density_ridges(     aes(vline_color = Species),     alpha = .4, quantile_lines = TRUE   ) +   scale_fill_hue(l = 50) +   scale_vline_color_hue(l = 30) +   theme_ridges() #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/stat_binline.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat for histogram ridgeline plots — stat_binline","title":"Stat for histogram ridgeline plots — stat_binline","text":"Works like stat_bin except output ridgeline describing histogram rather set counts.","code":""},{"path":"https://wilkelab.org/ggridges/reference/stat_binline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stat for histogram ridgeline plots — stat_binline","text":"","code":"stat_binline(   mapping = NULL,   data = NULL,   geom = \"density_ridges\",   position = \"identity\",   ...,   binwidth = NULL,   bins = NULL,   center = NULL,   boundary = NULL,   breaks = NULL,   closed = c(\"right\", \"left\"),   pad = TRUE,   draw_baseline = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://wilkelab.org/ggridges/reference/stat_binline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat for histogram ridgeline plots — stat_binline","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geom use drawing. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. binwidth width bins. Can specified numeric value function calculates width unscaled x. , \"unscaled x\" refers original x values data, application scale transformation. specifying function along grouping structure, function called per group. default use number bins bins, covering range data. always override value, exploring multiple widths find best illustrate stories data. bin width date variable number days time; bin width time variable number seconds. bins Number bins. Overridden binwidth. Defaults 30. center, boundary bin position specifiers. one, center boundary, may specified single plot. center specifies center one bins. boundary specifies boundary two bins. Note either range data, things shifted appropriate integer multiple binwidth. example, center integers use binwidth = 1 center = 0, even 0 outside range data. Alternatively, alignment can specified binwidth = 1 boundary = 0.5, even 0.5 outside range data. breaks Alternatively, can supply numeric vector giving bin boundaries. Overrides binwidth, bins, center, boundary. closed One \"right\" \"left\" indicating whether right left edges bins included bin. pad TRUE, adds empty bins either end x. ensures binline always goes back 0. Defaults TRUE. draw_baseline FALSE, removes lines along 0 counts. Defaults TRUE. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://wilkelab.org/ggridges/reference/stat_binline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stat for histogram ridgeline plots — stat_binline","text":"","code":"library(ggplot2)  ggplot(iris, aes(x = Sepal.Length, y = Species, group = Species, fill = Species)) +   geom_density_ridges(stat = \"binline\", bins = 20, scale = 2.2) +   scale_y_discrete(expand = c(0, 0)) +   scale_x_continuous(expand = c(0, 0)) +   coord_cartesian(clip = \"off\") +   theme_ridges()   ggplot(iris, aes(x = Sepal.Length, y = Species, group = Species, fill = Species)) +   stat_binline(bins = 20, scale = 2.2, draw_baseline = FALSE) +   scale_y_discrete(expand = c(0, 0)) +   scale_x_continuous(expand = c(0, 0)) +   scale_fill_grey() +   coord_cartesian(clip = \"off\") +   theme_ridges() +   theme(legend.position = 'none')   library(ggplot2movies) ggplot(movies[movies$year>1989,], aes(x = length, y = year, fill = factor(year))) +    stat_binline(scale = 1.9, bins = 40) +    scale_x_continuous(limits = c(1, 180), expand = c(0, 0)) +    scale_y_reverse(expand = c(0, 0)) +    scale_fill_viridis_d(begin = 0.3, option = \"B\") +    coord_cartesian(clip = \"off\") +    labs(title = \"Movie lengths 1990 - 2005\") +    theme_ridges() +    theme(legend.position = \"none\") #> Warning: Removed 118 rows containing non-finite outside the scale range #> (`stat_binline()`).   count_data <- data.frame(   group = rep(letters[1:5], each = 10),   mean = rep(1:5, each = 10) ) count_data$group <- factor(count_data$group, levels = letters[5:1]) count_data$count <- rpois(nrow(count_data), count_data$mean)  ggplot(count_data, aes(x = count, y = group, group = group)) +   geom_density_ridges2(     stat = \"binline\",     aes(fill = group),     binwidth = 1,     scale = 0.95   ) +   geom_text(     stat = \"bin\",     aes(y = group + 0.9*stat(count/max(count)),     label = ifelse(stat(count) > 0, stat(count), \"\")),     vjust = 1.2, size = 3, color = \"white\", binwidth = 1   ) +   scale_x_continuous(breaks = c(0:12), limits = c(-.5, 13), expand = c(0, 0)) +   scale_y_discrete(expand = c(0, 0)) +   scale_fill_cyclical(values = c(\"#0000B0\", \"#7070D0\")) +   guides(y = \"none\") +   coord_cartesian(clip = \"off\") +   theme_ridges(grid = FALSE)"},{"path":"https://wilkelab.org/ggridges/reference/stat_density_ridges.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat for density ridgeline plots — stat_density_ridges","title":"Stat for density ridgeline plots — stat_density_ridges","text":"stat default stat used geom_density_ridges. similar ggplot2::stat_density, however differences. importantly, density bandwidth chosen across entire dataset.","code":""},{"path":"https://wilkelab.org/ggridges/reference/stat_density_ridges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stat for density ridgeline plots — stat_density_ridges","text":"","code":"stat_density_ridges(   mapping = NULL,   data = NULL,   geom = \"density_ridges\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   bandwidth = NULL,   from = NULL,   to = NULL,   jittered_points = FALSE,   quantile_lines = FALSE,   calc_ecdf = FALSE,   quantiles = 4,   quantile_fun = quantile,   n = 512,   ... )"},{"path":"https://wilkelab.org/ggridges/reference/stat_density_ridges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat for density ridgeline plots — stat_density_ridges","text":"mapping Set aesthetic mappings created ggplot2::aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. function called single argument, plot data. return value must data.frame., used layer data. geom geometric object use display data. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . bandwidth Bandwidth used density calculation. provided, estimated data. , left right-points grid density estimated, stats::density(). provided, estimated data range bandwidth. jittered_points TRUE, carries original point data processed data frame, individual points can drawn various ridgeline geoms. specific position points controlled various position objects, e.g. position_points_sina() position_raincloud(). quantile_lines TRUE, enables drawing quantile lines. Overrides calc_ecdf setting sets TRUE. calc_ecdf TRUE, stat_density_ridges calculates empirical cumulative distribution function (ecdf) returns variable ecdf variable quantile. can mapped onto aesthetics via stat(ecdf) stat(quantile), respectively. quantiles Sets number quantiles data broken . Used either calc_ecdf = TRUE quantile_lines = TRUE. quantiles integer data cut many equal quantiles. vector probabilities data cut . quantile_fun Function calculates quantiles. function needs accept two parameters, vector x holding raw data values vector probs providing probabilities define quantiles. Default quantile. n number equally spaced points density estimated. power 2. Default 512. ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" linewidth = 3. may also parameters paired geom/stat.","code":""},{"path":"https://wilkelab.org/ggridges/reference/stat_density_ridges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stat for density ridgeline plots — stat_density_ridges","text":"","code":"library(ggplot2)  # Examples of coloring by ecdf or quantiles ggplot(iris, aes(x = Sepal.Length, y = Species, fill = factor(stat(quantile)))) +   stat_density_ridges(     geom = \"density_ridges_gradient\",     calc_ecdf = TRUE,     quantiles = 5   ) +   scale_fill_viridis_d(name = \"Quintiles\") +   theme_ridges() #> Picking joint bandwidth of 0.181   ggplot(iris,   aes(     x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5-stat(ecdf))   )) +   stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +   scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +   theme_ridges() #> Picking joint bandwidth of 0.181   ggplot(iris,   aes(     x = Sepal.Length, y = Species, fill = factor(stat(quantile))   )) +   stat_density_ridges(     geom = \"density_ridges_gradient\",     calc_ecdf = TRUE, quantiles = c(0.025, 0.975)   ) +   scale_fill_manual(     name = \"Probability\",     values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),     labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")   ) +   theme_ridges() #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/reference/theme_ridges.html","id":null,"dir":"Reference","previous_headings":"","what":"A custom theme specifically for use with ridgeline plots — theme_ridges","title":"A custom theme specifically for use with ridgeline plots — theme_ridges","text":"theme special modifications make ridgeline plots look better, properly aligned y axis labels. can draw plots without background grids (see examples).","code":""},{"path":"https://wilkelab.org/ggridges/reference/theme_ridges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A custom theme specifically for use with ridgeline plots — theme_ridges","text":"","code":"theme_ridges(   font_size = 14,   font_family = \"\",   line_size = 0.5,   grid = TRUE,   center_axis_labels = FALSE )"},{"path":"https://wilkelab.org/ggridges/reference/theme_ridges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A custom theme specifically for use with ridgeline plots — theme_ridges","text":"font_size Overall font size. Default 14. font_family Default font family. line_size Default line size. grid TRUE (default), background grid drawn. FALSE, background left empty. center_axis_labels TRUE, axis labels drawn centered. FALSE (default), axis lables drawn right/top-aligned.","code":""},{"path":"https://wilkelab.org/ggridges/reference/theme_ridges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A custom theme specifically for use with ridgeline plots — theme_ridges","text":"theme.","code":""},{"path":"https://wilkelab.org/ggridges/reference/theme_ridges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A custom theme specifically for use with ridgeline plots — theme_ridges","text":"","code":"library(ggplot2)  # Example with background grid ggplot(iris, aes(x = Sepal.Length, y = Species, group = Species)) +   geom_density_ridges(rel_min_height = 0.005) +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   theme_ridges() #> Picking joint bandwidth of 0.181   # Example without background grid ggplot(iris, aes(x = Sepal.Length, y = Species, group = Species)) +   geom_density_ridges() +   scale_y_discrete(expand = c(0.01, 0)) +   scale_x_continuous(expand = c(0.01, 0)) +   theme_ridges(grid = FALSE) #> Picking joint bandwidth of 0.181"},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-057","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.7","title":"ggridges 0.5.7","text":"Various fixes latest versions R ggplot2. Add support weighted density estimates stat_density_ridges() allowing use weight aesthetic (@joranE, #90) Add support grid::pattern(), grid::linearGradient(), grid::radialGradient() values fill point_fill aesthetics using ggplot2::fill_alpha() (@trevorld, #94)","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-056","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.6","title":"ggridges 0.5.6","text":"CRAN release: 2024-01-23 fix issues upcoming ggplot2 3.5.0.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-055","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.5","title":"ggridges 0.5.5","text":"CRAN release: 2023-12-15 Replace ggplot2::expand_scale() ggplot2::expansion() vignettes avoid deprecation warnings ggplot2 0.3.3 (@jthomasmock, #78) Replace size argument line functions linewidth avoid deprecation warnings ggplot2 0.3.4 (@jthomasmock, #78) Replace use ..density.. ggplot2::after_stat(density) avoid deprecation warnings ggplot2 0.3.4 (@jthomasmock, #78)","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-054","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.4","title":"ggridges 0.5.4","text":"CRAN release: 2022-09-26 Remove broken link docs.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-053","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.3","title":"ggridges 0.5.3","text":"CRAN release: 2021-01-08 Make sure tests don’t fail vdiffr missing.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-052","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.2","title":"ggridges 0.5.2","text":"CRAN release: 2020-01-12 now project website https://wilkelab.org/ggridges. new example dataset added, Aus_athletes. scale_discrete_manual() removed ggridges package, available ggplot2 since version 3.0.0. stat_density_ridges() now parameter n determines many points along x axis density estimated.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-051","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.1","title":"ggridges 0.5.1","text":"CRAN release: 2018-09-27 alpha aesthetic now default applied jittered points. don’t want happen, set point_alpha = 1. Allow custom function calculate position quantile lines. makes possible, example, place line mean, via quantile_fun = mean. Allow coloring quantile lines jittered points quantile.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-050","dir":"Changelog","previous_headings":"","what":"ggridges 0.5.0","title":"ggridges 0.5.0","text":"CRAN release: 2018-04-05 Expanded documentation gallery example plots. Reworked stat_density_ridges, geom_ridgeline, geom_density_ridges, etc. jittered points quantile lines can drawn top distributions. Points quantile lines can styled separately rest ridgeline plot, via special aesthetics. Added position options control jittered points drawn. Default uniformly spaced within density area. Added geom_density_line() drop-replacement geom_density() draws ridgeline rather closed polygon. theme_ridges() modified font sizes match cowplot themes. particular, means smaller axis tick labels.","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-041","dir":"Changelog","previous_headings":"","what":"ggridges 0.4.1","title":"ggridges 0.4.1","text":"CRAN release: 2017-09-15 Skip vdiffr visual tests compiling CRAN","code":""},{"path":"https://wilkelab.org/ggridges/news/index.html","id":"ggridges-040","dir":"Changelog","previous_headings":"","what":"ggridges 0.4.0","title":"ggridges 0.4.0","text":"CRAN release: 2017-09-14 Initial import code base ggjoy, renaming: geom_joy -> geom_density_ridges stat_joy -> stat_density_ridges theme_joy -> theme_ridges","code":""}]
